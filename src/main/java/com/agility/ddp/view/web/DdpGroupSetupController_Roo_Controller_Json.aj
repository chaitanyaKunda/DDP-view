// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.agility.ddp.view.web;

import com.agility.ddp.data.domain.DdpGroupSetup;
import com.agility.ddp.view.web.DdpGroupSetupController;
import java.util.List;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

privileged aspect DdpGroupSetupController_Roo_Controller_Json {
    
    @RequestMapping(value = "/{grsId}", method = RequestMethod.GET, headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> DdpGroupSetupController.showJson(@PathVariable("grsId") Integer grsId) {
        DdpGroupSetup ddpGroupSetup = ddpGroupSetupService.findDdpGroupSetup(grsId);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        if (ddpGroupSetup == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(ddpGroupSetup.toJson(), headers, HttpStatus.OK);
    }
    
    @RequestMapping(headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> DdpGroupSetupController.listJson() {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        List<DdpGroupSetup> result = ddpGroupSetupService.findAllDdpGroupSetups();
        return new ResponseEntity<String>(DdpGroupSetup.toJsonArray(result), headers, HttpStatus.OK);
    }
    
    @RequestMapping(method = RequestMethod.POST, headers = "Accept=application/json")
    public ResponseEntity<String> DdpGroupSetupController.createFromJson(@RequestBody String json) {
        DdpGroupSetup ddpGroupSetup = DdpGroupSetup.fromJsonToDdpGroupSetup(json);
        ddpGroupSetupService.saveDdpGroupSetup(ddpGroupSetup);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(value = "/jsonArray", method = RequestMethod.POST, headers = "Accept=application/json")
    public ResponseEntity<String> DdpGroupSetupController.createFromJsonArray(@RequestBody String json) {
        for (DdpGroupSetup ddpGroupSetup: DdpGroupSetup.fromJsonArrayToDdpGroupSetups(json)) {
            ddpGroupSetupService.saveDdpGroupSetup(ddpGroupSetup);
        }
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(value = "/{grsId}", method = RequestMethod.PUT, headers = "Accept=application/json")
    public ResponseEntity<String> DdpGroupSetupController.updateFromJson(@RequestBody String json, @PathVariable("grsId") Integer grsId) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        DdpGroupSetup ddpGroupSetup = DdpGroupSetup.fromJsonToDdpGroupSetup(json);
        if (ddpGroupSetupService.updateDdpGroupSetup(ddpGroupSetup) == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(headers, HttpStatus.OK);
    }
    
        
}
