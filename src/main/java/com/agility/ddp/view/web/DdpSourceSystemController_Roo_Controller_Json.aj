// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.agility.ddp.view.web;

import com.agility.ddp.data.domain.DdpSourceSystem;
import com.agility.ddp.view.web.DdpSourceSystemController;
import java.util.List;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

privileged aspect DdpSourceSystemController_Roo_Controller_Json {
    
    @RequestMapping(value = "/{souApplicationCode}", method = RequestMethod.GET, headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> DdpSourceSystemController.showJson(@PathVariable("souApplicationCode") String souApplicationCode) {
        DdpSourceSystem ddpSourceSystem = ddpSourceSystemService.findDdpSourceSystem(souApplicationCode);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        if (ddpSourceSystem == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(ddpSourceSystem.toJson(), headers, HttpStatus.OK);
    }
    
    @RequestMapping(headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> DdpSourceSystemController.listJson() {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        List<DdpSourceSystem> result = ddpSourceSystemService.findAllDdpSourceSystems();
        return new ResponseEntity<String>(DdpSourceSystem.toJsonArray(result), headers, HttpStatus.OK);
    }
    
    @RequestMapping(method = RequestMethod.POST, headers = "Accept=application/json")
    public ResponseEntity<String> DdpSourceSystemController.createFromJson(@RequestBody String json) {
        DdpSourceSystem ddpSourceSystem = DdpSourceSystem.fromJsonToDdpSourceSystem(json);
        ddpSourceSystemService.saveDdpSourceSystem(ddpSourceSystem);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(value = "/jsonArray", method = RequestMethod.POST, headers = "Accept=application/json")
    public ResponseEntity<String> DdpSourceSystemController.createFromJsonArray(@RequestBody String json) {
        for (DdpSourceSystem ddpSourceSystem: DdpSourceSystem.fromJsonArrayToDdpSourceSystems(json)) {
            ddpSourceSystemService.saveDdpSourceSystem(ddpSourceSystem);
        }
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(value = "/{souApplicationCode}", method = RequestMethod.PUT, headers = "Accept=application/json")
    public ResponseEntity<String> DdpSourceSystemController.updateFromJson(@RequestBody String json, @PathVariable("souApplicationCode") String souApplicationCode) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        DdpSourceSystem ddpSourceSystem = DdpSourceSystem.fromJsonToDdpSourceSystem(json);
        if (ddpSourceSystemService.updateDdpSourceSystem(ddpSourceSystem) == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(headers, HttpStatus.OK);
    }
    
    @RequestMapping(value = "/{souApplicationCode}", method = RequestMethod.DELETE, headers = "Accept=application/json")
    public ResponseEntity<String> DdpSourceSystemController.deleteFromJson(@PathVariable("souApplicationCode") String souApplicationCode) {
        DdpSourceSystem ddpSourceSystem = ddpSourceSystemService.findDdpSourceSystem(souApplicationCode);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        if (ddpSourceSystem == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        ddpSourceSystemService.deleteDdpSourceSystem(ddpSourceSystem);
        return new ResponseEntity<String>(headers, HttpStatus.OK);
    }
    
}
