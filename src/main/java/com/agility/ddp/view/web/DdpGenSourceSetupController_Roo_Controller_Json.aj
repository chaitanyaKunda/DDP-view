// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.agility.ddp.view.web;

import com.agility.ddp.data.domain.DdpGenSourceSetup;
import com.agility.ddp.data.domain.DdpRuleDetail;
import com.agility.ddp.view.web.DdpGenSourceSetupController;
import java.util.List;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

privileged aspect DdpGenSourceSetupController_Roo_Controller_Json {
    
    @RequestMapping(value = "/{gssId}", method = RequestMethod.GET, headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> DdpGenSourceSetupController.showJson(@PathVariable("gssId") Integer gssId) {
        DdpGenSourceSetup ddpGenSourceSetup = ddpGenSourceSetupService.findDdpGenSourceSetup(gssId);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        if (ddpGenSourceSetup == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(ddpGenSourceSetup.toJson(), headers, HttpStatus.OK);
    }
    
    @RequestMapping(headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> DdpGenSourceSetupController.listJson() {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        List<DdpGenSourceSetup> result = ddpGenSourceSetupService.findAllDdpGenSourceSetups();
        return new ResponseEntity<String>(DdpGenSourceSetup.toJsonArray(result), headers, HttpStatus.OK);
    }
    
    @RequestMapping(method = RequestMethod.POST, headers = "Accept=application/json")
    public ResponseEntity<String> DdpGenSourceSetupController.createFromJson(@RequestBody String json) {
        DdpGenSourceSetup ddpGenSourceSetup = DdpGenSourceSetup.fromJsonToDdpGenSourceSetup(json);
        ddpGenSourceSetupService.saveDdpGenSourceSetup(ddpGenSourceSetup);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(value = "/jsonArray", method = RequestMethod.POST, headers = "Accept=application/json")
    public ResponseEntity<String> DdpGenSourceSetupController.createFromJsonArray(@RequestBody String json) {
        for (DdpGenSourceSetup ddpGenSourceSetup: DdpGenSourceSetup.fromJsonArrayToDdpGenSourceSetups(json)) {
            ddpGenSourceSetupService.saveDdpGenSourceSetup(ddpGenSourceSetup);
        }
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(value = "/{gssId}", method = RequestMethod.PUT, headers = "Accept=application/json")
    public ResponseEntity<String> DdpGenSourceSetupController.updateFromJson(@RequestBody String json, @PathVariable("gssId") Integer gssId) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        DdpGenSourceSetup ddpGenSourceSetup = DdpGenSourceSetup.fromJsonToDdpGenSourceSetup(json);
        if (ddpGenSourceSetupService.updateDdpGenSourceSetup(ddpGenSourceSetup) == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(headers, HttpStatus.OK);
    }
    
    @RequestMapping(value = "/{gssId}", method = RequestMethod.DELETE, headers = "Accept=application/json")
    public ResponseEntity<String> DdpGenSourceSetupController.deleteFromJson(@PathVariable("gssId") Integer gssId) {
        DdpGenSourceSetup ddpGenSourceSetup = ddpGenSourceSetupService.findDdpGenSourceSetup(gssId);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        if (ddpGenSourceSetup == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        ddpGenSourceSetupService.deleteDdpGenSourceSetup(ddpGenSourceSetup);
        return new ResponseEntity<String>(headers, HttpStatus.OK);
    }
    
    @RequestMapping(params = "find=ByGssRdtId", headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> DdpGenSourceSetupController.jsonFindDdpGenSourceSetupsByGssRdtId(@RequestParam("gssRdtId") DdpRuleDetail gssRdtId) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        return new ResponseEntity<String>(DdpGenSourceSetup.toJsonArray(DdpGenSourceSetup.findDdpGenSourceSetupsByGssRdtId(gssRdtId).getResultList()), headers, HttpStatus.OK);
    }
    
}
