// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.agility.ddp.view.web;

import com.agility.ddp.data.domain.DdpCommunicationLkp;
import com.agility.ddp.view.web.DdpCommunicationLkpController;
import java.util.List;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

privileged aspect DdpCommunicationLkpController_Roo_Controller_Json {
    
    @RequestMapping(value = "/{colCommunicationLkpId}", method = RequestMethod.GET, headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> DdpCommunicationLkpController.showJson(@PathVariable("colCommunicationLkpId") Integer colCommunicationLkpId) {
        DdpCommunicationLkp ddpCommunicationLkp = ddpCommunicationLkpService.findDdpCommunicationLkp(colCommunicationLkpId);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        if (ddpCommunicationLkp == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(ddpCommunicationLkp.toJson(), headers, HttpStatus.OK);
    }
    
    @RequestMapping(headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> DdpCommunicationLkpController.listJson() {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        List<DdpCommunicationLkp> result = ddpCommunicationLkpService.findAllDdpCommunicationLkps();
        return new ResponseEntity<String>(DdpCommunicationLkp.toJsonArray(result), headers, HttpStatus.OK);
    }
    
    @RequestMapping(method = RequestMethod.POST, headers = "Accept=application/json")
    public ResponseEntity<String> DdpCommunicationLkpController.createFromJson(@RequestBody String json) {
        DdpCommunicationLkp ddpCommunicationLkp = DdpCommunicationLkp.fromJsonToDdpCommunicationLkp(json);
        ddpCommunicationLkpService.saveDdpCommunicationLkp(ddpCommunicationLkp);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(value = "/jsonArray", method = RequestMethod.POST, headers = "Accept=application/json")
    public ResponseEntity<String> DdpCommunicationLkpController.createFromJsonArray(@RequestBody String json) {
        for (DdpCommunicationLkp ddpCommunicationLkp: DdpCommunicationLkp.fromJsonArrayToDdpCommunicationLkps(json)) {
            ddpCommunicationLkpService.saveDdpCommunicationLkp(ddpCommunicationLkp);
        }
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(value = "/{colCommunicationLkpId}", method = RequestMethod.PUT, headers = "Accept=application/json")
    public ResponseEntity<String> DdpCommunicationLkpController.updateFromJson(@RequestBody String json, @PathVariable("colCommunicationLkpId") Integer colCommunicationLkpId) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        DdpCommunicationLkp ddpCommunicationLkp = DdpCommunicationLkp.fromJsonToDdpCommunicationLkp(json);
        if (ddpCommunicationLkpService.updateDdpCommunicationLkp(ddpCommunicationLkp) == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(headers, HttpStatus.OK);
    }
    
    @RequestMapping(value = "/{colCommunicationLkpId}", method = RequestMethod.DELETE, headers = "Accept=application/json")
    public ResponseEntity<String> DdpCommunicationLkpController.deleteFromJson(@PathVariable("colCommunicationLkpId") Integer colCommunicationLkpId) {
        DdpCommunicationLkp ddpCommunicationLkp = ddpCommunicationLkpService.findDdpCommunicationLkp(colCommunicationLkpId);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        if (ddpCommunicationLkp == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        ddpCommunicationLkpService.deleteDdpCommunicationLkp(ddpCommunicationLkp);
        return new ResponseEntity<String>(headers, HttpStatus.OK);
    }
    
}
