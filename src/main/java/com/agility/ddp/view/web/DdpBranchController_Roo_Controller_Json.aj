// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.agility.ddp.view.web;

import com.agility.ddp.data.domain.DdpBranch;
import com.agility.ddp.view.web.DdpBranchController;
import java.util.List;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

privileged aspect DdpBranchController_Roo_Controller_Json {
    
    @RequestMapping(value = "/{brnBranchCode}", method = RequestMethod.GET, headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> DdpBranchController.showJson(@PathVariable("brnBranchCode") String brnBranchCode) {
        DdpBranch ddpBranch = ddpBranchService.findDdpBranch(brnBranchCode);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        if (ddpBranch == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(ddpBranch.toJson(), headers, HttpStatus.OK);
    }
    
    @RequestMapping(headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> DdpBranchController.listJson() {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        List<DdpBranch> result = ddpBranchService.findAllDdpBranches();
        return new ResponseEntity<String>(DdpBranch.toJsonArray(result), headers, HttpStatus.OK);
    }
    
    @RequestMapping(method = RequestMethod.POST, headers = "Accept=application/json")
    public ResponseEntity<String> DdpBranchController.createFromJson(@RequestBody String json) {
        DdpBranch ddpBranch = DdpBranch.fromJsonToDdpBranch(json);
        ddpBranchService.saveDdpBranch(ddpBranch);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(value = "/jsonArray", method = RequestMethod.POST, headers = "Accept=application/json")
    public ResponseEntity<String> DdpBranchController.createFromJsonArray(@RequestBody String json) {
        for (DdpBranch ddpBranch: DdpBranch.fromJsonArrayToDdpBranches(json)) {
            ddpBranchService.saveDdpBranch(ddpBranch);
        }
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(value = "/{brnBranchCode}", method = RequestMethod.PUT, headers = "Accept=application/json")
    public ResponseEntity<String> DdpBranchController.updateFromJson(@RequestBody String json, @PathVariable("brnBranchCode") String brnBranchCode) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        DdpBranch ddpBranch = DdpBranch.fromJsonToDdpBranch(json);
        if (ddpBranchService.updateDdpBranch(ddpBranch) == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(headers, HttpStatus.OK);
    }
    
        
}
