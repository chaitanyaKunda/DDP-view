// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.agility.ddp.view.web;

import com.agility.ddp.data.domain.DdpRateSetup;
import com.agility.ddp.data.domain.DdpRuleDetail;
import com.agility.ddp.view.web.DdpRateSetupController;
import java.util.List;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

privileged aspect DdpRateSetupController_Roo_Controller_Json {
    
    @RequestMapping(value = "/{rtsId}", method = RequestMethod.GET, headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> DdpRateSetupController.showJson(@PathVariable("rtsId") Integer rtsId) {
        DdpRateSetup ddpRateSetup = ddpRateSetupService.findDdpRateSetup(rtsId);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        if (ddpRateSetup == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(ddpRateSetup.toJson(), headers, HttpStatus.OK);
    }
    
    @RequestMapping(headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> DdpRateSetupController.listJson() {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        List<DdpRateSetup> result = ddpRateSetupService.findAllDdpRateSetups();
        return new ResponseEntity<String>(DdpRateSetup.toJsonArray(result), headers, HttpStatus.OK);
    }
    
    @RequestMapping(method = RequestMethod.POST, headers = "Accept=application/json")
    public ResponseEntity<String> DdpRateSetupController.createFromJson(@RequestBody String json) {
        DdpRateSetup ddpRateSetup = DdpRateSetup.fromJsonToDdpRateSetup(json);
        ddpRateSetupService.saveDdpRateSetup(ddpRateSetup);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(value = "/jsonArray", method = RequestMethod.POST, headers = "Accept=application/json")
    public ResponseEntity<String> DdpRateSetupController.createFromJsonArray(@RequestBody String json) {
        for (DdpRateSetup ddpRateSetup: DdpRateSetup.fromJsonArrayToDdpRateSetups(json)) {
            ddpRateSetupService.saveDdpRateSetup(ddpRateSetup);
        }
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(value = "/{rtsId}", method = RequestMethod.PUT, headers = "Accept=application/json")
    public ResponseEntity<String> DdpRateSetupController.updateFromJson(@RequestBody String json, @PathVariable("rtsId") Integer rtsId) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        DdpRateSetup ddpRateSetup = DdpRateSetup.fromJsonToDdpRateSetup(json);
        if (ddpRateSetupService.updateDdpRateSetup(ddpRateSetup) == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(headers, HttpStatus.OK);
    }
    
    @RequestMapping(value = "/{rtsId}", method = RequestMethod.DELETE, headers = "Accept=application/json")
    public ResponseEntity<String> DdpRateSetupController.deleteFromJson(@PathVariable("rtsId") Integer rtsId) {
        DdpRateSetup ddpRateSetup = ddpRateSetupService.findDdpRateSetup(rtsId);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        if (ddpRateSetup == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        ddpRateSetupService.deleteDdpRateSetup(ddpRateSetup);
        return new ResponseEntity<String>(headers, HttpStatus.OK);
    }
    
    @RequestMapping(params = "find=ByDdpRuleDetail", headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> DdpRateSetupController.jsonFindDdpRateSetupsByDdpRuleDetail(@RequestParam("ddpRuleDetail") DdpRuleDetail ddpRuleDetail) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        return new ResponseEntity<String>(DdpRateSetup.toJsonArray(DdpRateSetup.findDdpRateSetupsByDdpRuleDetail(ddpRuleDetail).getResultList()), headers, HttpStatus.OK);
    }
    
}
