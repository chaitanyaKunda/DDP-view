// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.agility.ddp.view.web;

import com.agility.ddp.data.domain.DdpExportVersionSetup;
import com.agility.ddp.data.domain.DdpRuleDetail;
import com.agility.ddp.view.web.DdpExportVersionSetupController;
import java.util.List;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

privileged aspect DdpExportVersionSetupController_Roo_Controller_Json {
    
    @RequestMapping(value = "/{evsId}", method = RequestMethod.GET, headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> DdpExportVersionSetupController.showJson(@PathVariable("evsId") Integer evsId) {
        DdpExportVersionSetup ddpExportVersionSetup = ddpExportVersionSetupService.findDdpExportVersionSetup(evsId);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        if (ddpExportVersionSetup == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(ddpExportVersionSetup.toJson(), headers, HttpStatus.OK);
    }
    
    @RequestMapping(headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> DdpExportVersionSetupController.listJson() {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        List<DdpExportVersionSetup> result = ddpExportVersionSetupService.findAllDdpExportVersionSetups();
        return new ResponseEntity<String>(DdpExportVersionSetup.toJsonArray(result), headers, HttpStatus.OK);
    }
    
    @RequestMapping(method = RequestMethod.POST, headers = "Accept=application/json")
    public ResponseEntity<String> DdpExportVersionSetupController.createFromJson(@RequestBody String json) {
        DdpExportVersionSetup ddpExportVersionSetup = DdpExportVersionSetup.fromJsonToDdpExportVersionSetup(json);
        ddpExportVersionSetupService.saveDdpExportVersionSetup(ddpExportVersionSetup);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(value = "/jsonArray", method = RequestMethod.POST, headers = "Accept=application/json")
    public ResponseEntity<String> DdpExportVersionSetupController.createFromJsonArray(@RequestBody String json) {
        for (DdpExportVersionSetup ddpExportVersionSetup: DdpExportVersionSetup.fromJsonArrayToDdpExportVersionSetups(json)) {
            ddpExportVersionSetupService.saveDdpExportVersionSetup(ddpExportVersionSetup);
        }
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(value = "/{evsId}", method = RequestMethod.PUT, headers = "Accept=application/json")
    public ResponseEntity<String> DdpExportVersionSetupController.updateFromJson(@RequestBody String json, @PathVariable("evsId") Integer evsId) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        DdpExportVersionSetup ddpExportVersionSetup = DdpExportVersionSetup.fromJsonToDdpExportVersionSetup(json);
        if (ddpExportVersionSetupService.updateDdpExportVersionSetup(ddpExportVersionSetup) == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(headers, HttpStatus.OK);
    }
    
    @RequestMapping(value = "/{evsId}", method = RequestMethod.DELETE, headers = "Accept=application/json")
    public ResponseEntity<String> DdpExportVersionSetupController.deleteFromJson(@PathVariable("evsId") Integer evsId) {
        DdpExportVersionSetup ddpExportVersionSetup = ddpExportVersionSetupService.findDdpExportVersionSetup(evsId);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        if (ddpExportVersionSetup == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        ddpExportVersionSetupService.deleteDdpExportVersionSetup(ddpExportVersionSetup);
        return new ResponseEntity<String>(headers, HttpStatus.OK);
    }
    
    @RequestMapping(params = "find=ByEvsRdtId", headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> DdpExportVersionSetupController.jsonFindDdpExportVersionSetupsByEvsRdtId(@RequestParam("evsRdtId") DdpRuleDetail evsRdtId) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        return new ResponseEntity<String>(DdpExportVersionSetup.toJsonArray(DdpExportVersionSetup.findDdpExportVersionSetupsByEvsRdtId(evsRdtId).getResultList()), headers, HttpStatus.OK);
    }
    
}
