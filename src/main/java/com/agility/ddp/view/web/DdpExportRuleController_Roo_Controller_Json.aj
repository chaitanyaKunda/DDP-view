// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.agility.ddp.view.web;

import com.agility.ddp.data.domain.DdpExportRule;
import com.agility.ddp.view.web.DdpExportRuleController;
import java.util.List;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

privileged aspect DdpExportRuleController_Roo_Controller_Json {
    
    @RequestMapping(value = "/{expRuleId}", method = RequestMethod.GET, headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> DdpExportRuleController.showJson(@PathVariable("expRuleId") Integer expRuleId) {
        DdpExportRule ddpExportRule = ddpExportRuleService.findDdpExportRule(expRuleId);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        if (ddpExportRule == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(ddpExportRule.toJson(), headers, HttpStatus.OK);
    }
    
    @RequestMapping(headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> DdpExportRuleController.listJson() {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        List<DdpExportRule> result = ddpExportRuleService.findAllDdpExportRules();
        return new ResponseEntity<String>(DdpExportRule.toJsonArray(result), headers, HttpStatus.OK);
    }
    
    @RequestMapping(method = RequestMethod.POST, headers = "Accept=application/json")
    public ResponseEntity<String> DdpExportRuleController.createFromJson(@RequestBody String json) {
        DdpExportRule ddpExportRule = DdpExportRule.fromJsonToDdpExportRule(json);
        ddpExportRuleService.saveDdpExportRule(ddpExportRule);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(value = "/jsonArray", method = RequestMethod.POST, headers = "Accept=application/json")
    public ResponseEntity<String> DdpExportRuleController.createFromJsonArray(@RequestBody String json) {
        for (DdpExportRule ddpExportRule: DdpExportRule.fromJsonArrayToDdpExportRules(json)) {
            ddpExportRuleService.saveDdpExportRule(ddpExportRule);
        }
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(value = "/{expRuleId}", method = RequestMethod.PUT, headers = "Accept=application/json")
    public ResponseEntity<String> DdpExportRuleController.updateFromJson(@RequestBody String json, @PathVariable("expRuleId") Integer expRuleId) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        DdpExportRule ddpExportRule = DdpExportRule.fromJsonToDdpExportRule(json);
        if (ddpExportRuleService.updateDdpExportRule(ddpExportRule) == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(headers, HttpStatus.OK);
    }
    
        
}
