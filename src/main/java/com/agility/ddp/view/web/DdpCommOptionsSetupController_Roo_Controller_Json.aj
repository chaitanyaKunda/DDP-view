// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.agility.ddp.view.web;

import com.agility.ddp.data.domain.DdpCommOptionsSetup;
import com.agility.ddp.data.domain.DdpRuleDetail;
import com.agility.ddp.view.web.DdpCommOptionsSetupController;
import java.util.List;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

privileged aspect DdpCommOptionsSetupController_Roo_Controller_Json {
    
    @RequestMapping(value = "/{copId}", method = RequestMethod.GET, headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> DdpCommOptionsSetupController.showJson(@PathVariable("copId") Integer copId) {
        DdpCommOptionsSetup ddpCommOptionsSetup = ddpCommOptionsSetupService.findDdpCommOptionsSetup(copId);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        if (ddpCommOptionsSetup == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(ddpCommOptionsSetup.toJson(), headers, HttpStatus.OK);
    }
    
    @RequestMapping(headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> DdpCommOptionsSetupController.listJson() {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        List<DdpCommOptionsSetup> result = ddpCommOptionsSetupService.findAllDdpCommOptionsSetups();
        return new ResponseEntity<String>(DdpCommOptionsSetup.toJsonArray(result), headers, HttpStatus.OK);
    }
    
    @RequestMapping(method = RequestMethod.POST, headers = "Accept=application/json")
    public ResponseEntity<String> DdpCommOptionsSetupController.createFromJson(@RequestBody String json) {
        DdpCommOptionsSetup ddpCommOptionsSetup = DdpCommOptionsSetup.fromJsonToDdpCommOptionsSetup(json);
        ddpCommOptionsSetupService.saveDdpCommOptionsSetup(ddpCommOptionsSetup);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(value = "/jsonArray", method = RequestMethod.POST, headers = "Accept=application/json")
    public ResponseEntity<String> DdpCommOptionsSetupController.createFromJsonArray(@RequestBody String json) {
        for (DdpCommOptionsSetup ddpCommOptionsSetup: DdpCommOptionsSetup.fromJsonArrayToDdpCommOptionsSetups(json)) {
            ddpCommOptionsSetupService.saveDdpCommOptionsSetup(ddpCommOptionsSetup);
        }
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(value = "/{copId}", method = RequestMethod.PUT, headers = "Accept=application/json")
    public ResponseEntity<String> DdpCommOptionsSetupController.updateFromJson(@RequestBody String json, @PathVariable("copId") Integer copId) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        DdpCommOptionsSetup ddpCommOptionsSetup = DdpCommOptionsSetup.fromJsonToDdpCommOptionsSetup(json);
        if (ddpCommOptionsSetupService.updateDdpCommOptionsSetup(ddpCommOptionsSetup) == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(headers, HttpStatus.OK);
    }
    
    @RequestMapping(value = "/{copId}", method = RequestMethod.DELETE, headers = "Accept=application/json")
    public ResponseEntity<String> DdpCommOptionsSetupController.deleteFromJson(@PathVariable("copId") Integer copId) {
        DdpCommOptionsSetup ddpCommOptionsSetup = ddpCommOptionsSetupService.findDdpCommOptionsSetup(copId);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        if (ddpCommOptionsSetup == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        ddpCommOptionsSetupService.deleteDdpCommOptionsSetup(ddpCommOptionsSetup);
        return new ResponseEntity<String>(headers, HttpStatus.OK);
    }
    
    @RequestMapping(params = "find=ByCopRdtId", headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> DdpCommOptionsSetupController.jsonFindDdpCommOptionsSetupsByCopRdtId(@RequestParam("copRdtId") DdpRuleDetail copRdtId) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        return new ResponseEntity<String>(DdpCommOptionsSetup.toJsonArray(DdpCommOptionsSetup.findDdpCommOptionsSetupsByCopRdtId(copRdtId).getResultList()), headers, HttpStatus.OK);
    }
    
}
