// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.agility.ddp.view.web;

import com.agility.ddp.data.domain.DdpCategorizedDetail;
import com.agility.ddp.data.domain.DdpDmsDocsTxn;
import com.agility.ddp.view.web.DdpCategorizedDetailController;
import java.util.List;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

privileged aspect DdpCategorizedDetailController_Roo_Controller_Json {
    
    @RequestMapping(value = "/{cadId}", method = RequestMethod.GET, headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> DdpCategorizedDetailController.showJson(@PathVariable("cadId") Integer cadId) {
        DdpCategorizedDetail ddpCategorizedDetail = ddpCategorizedDetailService.findDdpCategorizedDetail(cadId);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        if (ddpCategorizedDetail == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(ddpCategorizedDetail.toJson(), headers, HttpStatus.OK);
    }
    
    @RequestMapping(headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> DdpCategorizedDetailController.listJson() {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        List<DdpCategorizedDetail> result = ddpCategorizedDetailService.findAllDdpCategorizedDetails();
        return new ResponseEntity<String>(DdpCategorizedDetail.toJsonArray(result), headers, HttpStatus.OK);
    }
    
    @RequestMapping(method = RequestMethod.POST, headers = "Accept=application/json")
    public ResponseEntity<String> DdpCategorizedDetailController.createFromJson(@RequestBody String json) {
        DdpCategorizedDetail ddpCategorizedDetail = DdpCategorizedDetail.fromJsonToDdpCategorizedDetail(json);
        ddpCategorizedDetailService.saveDdpCategorizedDetail(ddpCategorizedDetail);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(value = "/jsonArray", method = RequestMethod.POST, headers = "Accept=application/json")
    public ResponseEntity<String> DdpCategorizedDetailController.createFromJsonArray(@RequestBody String json) {
        for (DdpCategorizedDetail ddpCategorizedDetail: DdpCategorizedDetail.fromJsonArrayToDdpCategorizedDetails(json)) {
            ddpCategorizedDetailService.saveDdpCategorizedDetail(ddpCategorizedDetail);
        }
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(value = "/{cadId}", method = RequestMethod.PUT, headers = "Accept=application/json")
    public ResponseEntity<String> DdpCategorizedDetailController.updateFromJson(@RequestBody String json, @PathVariable("cadId") Integer cadId) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        DdpCategorizedDetail ddpCategorizedDetail = DdpCategorizedDetail.fromJsonToDdpCategorizedDetail(json);
        if (ddpCategorizedDetailService.updateDdpCategorizedDetail(ddpCategorizedDetail) == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(headers, HttpStatus.OK);
    }
    
    @RequestMapping(value = "/{cadId}", method = RequestMethod.DELETE, headers = "Accept=application/json")
    public ResponseEntity<String> DdpCategorizedDetailController.deleteFromJson(@PathVariable("cadId") Integer cadId) {
        DdpCategorizedDetail ddpCategorizedDetail = ddpCategorizedDetailService.findDdpCategorizedDetail(cadId);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        if (ddpCategorizedDetail == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        ddpCategorizedDetailService.deleteDdpCategorizedDetail(ddpCategorizedDetail);
        return new ResponseEntity<String>(headers, HttpStatus.OK);
    }
    
    @RequestMapping(params = "find=ByCadDtxId", headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> DdpCategorizedDetailController.jsonFindDdpCategorizedDetailsByCadDtxId(@RequestParam("cadDtxId") DdpDmsDocsTxn cadDtxId) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        return new ResponseEntity<String>(DdpCategorizedDetail.toJsonArray(DdpCategorizedDetail.findDdpCategorizedDetailsByCadDtxId(cadDtxId).getResultList()), headers, HttpStatus.OK);
    }
    
    @RequestMapping(params = "find=ByCadOriginSysIdEquals", headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> DdpCategorizedDetailController.jsonFindDdpCategorizedDetailsByCadOriginSysIdEquals(@RequestParam("cadOriginSysId") Integer cadOriginSysId) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        return new ResponseEntity<String>(DdpCategorizedDetail.toJsonArray(DdpCategorizedDetail.findDdpCategorizedDetailsByCadOriginSysIdEquals(cadOriginSysId).getResultList()), headers, HttpStatus.OK);
    }
    
    @RequestMapping(params = "find=ByCadRObjectIdEquals", headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> DdpCategorizedDetailController.jsonFindDdpCategorizedDetailsByCadRObjectIdEquals(@RequestParam("cadRObjectId") String cadRObjectId) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        return new ResponseEntity<String>(DdpCategorizedDetail.toJsonArray(DdpCategorizedDetail.findDdpCategorizedDetailsByCadRObjectIdEquals(cadRObjectId).getResultList()), headers, HttpStatus.OK);
    }
    
    @RequestMapping(params = "find=ByCadRulesCompletedCountEquals", headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> DdpCategorizedDetailController.jsonFindDdpCategorizedDetailsByCadRulesCompletedCountEquals(@RequestParam("cadRulesCompletedCount") Integer cadRulesCompletedCount) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        return new ResponseEntity<String>(DdpCategorizedDetail.toJsonArray(DdpCategorizedDetail.findDdpCategorizedDetailsByCadRulesCompletedCountEquals(cadRulesCompletedCount).getResultList()), headers, HttpStatus.OK);
    }
    
    @RequestMapping(params = "find=ByCadRulesFailedCountEquals", headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> DdpCategorizedDetailController.jsonFindDdpCategorizedDetailsByCadRulesFailedCountEquals(@RequestParam("cadRulesFailedCount") Integer cadRulesFailedCount) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        return new ResponseEntity<String>(DdpCategorizedDetail.toJsonArray(DdpCategorizedDetail.findDdpCategorizedDetailsByCadRulesFailedCountEquals(cadRulesFailedCount).getResultList()), headers, HttpStatus.OK);
    }
    
    @RequestMapping(params = "find=ByCadRulesInProgressCountEquals", headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> DdpCategorizedDetailController.jsonFindDdpCategorizedDetailsByCadRulesInProgressCountEquals(@RequestParam("cadRulesInProgressCount") Integer cadRulesInProgressCount) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        return new ResponseEntity<String>(DdpCategorizedDetail.toJsonArray(DdpCategorizedDetail.findDdpCategorizedDetailsByCadRulesInProgressCountEquals(cadRulesInProgressCount).getResultList()), headers, HttpStatus.OK);
    }
    
    @RequestMapping(params = "find=ByCadServiceTypeEquals", headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> DdpCategorizedDetailController.jsonFindDdpCategorizedDetailsByCadServiceTypeEquals(@RequestParam("cadServiceType") String cadServiceType) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        return new ResponseEntity<String>(DdpCategorizedDetail.toJsonArray(DdpCategorizedDetail.findDdpCategorizedDetailsByCadServiceTypeEquals(cadServiceType).getResultList()), headers, HttpStatus.OK);
    }
    
    @RequestMapping(params = "find=ByCadStatusEquals", headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> DdpCategorizedDetailController.jsonFindDdpCategorizedDetailsByCadStatusEquals(@RequestParam("cadStatus") Integer cadStatus) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        return new ResponseEntity<String>(DdpCategorizedDetail.toJsonArray(DdpCategorizedDetail.findDdpCategorizedDetailsByCadStatusEquals(cadStatus).getResultList()), headers, HttpStatus.OK);
    }
    
    @RequestMapping(params = "find=ByCadTotalRulesReqCountEquals", headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> DdpCategorizedDetailController.jsonFindDdpCategorizedDetailsByCadTotalRulesReqCountEquals(@RequestParam("cadTotalRulesReqCount") Integer cadTotalRulesReqCount) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        return new ResponseEntity<String>(DdpCategorizedDetail.toJsonArray(DdpCategorizedDetail.findDdpCategorizedDetailsByCadTotalRulesReqCountEquals(cadTotalRulesReqCount).getResultList()), headers, HttpStatus.OK);
    }
    
    @RequestMapping(params = "find=ByCadTransMessageEquals", headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> DdpCategorizedDetailController.jsonFindDdpCategorizedDetailsByCadTransMessageEquals(@RequestParam("cadTransMessage") String cadTransMessage) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        return new ResponseEntity<String>(DdpCategorizedDetail.toJsonArray(DdpCategorizedDetail.findDdpCategorizedDetailsByCadTransMessageEquals(cadTransMessage).getResultList()), headers, HttpStatus.OK);
    }
    
}
