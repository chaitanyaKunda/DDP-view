// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.agility.ddp.view.web;

import com.agility.ddp.data.domain.DdpCompressionLkp;
import com.agility.ddp.view.web.DdpCompressionLkpController;
import java.util.List;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

privileged aspect DdpCompressionLkpController_Roo_Controller_Json {
    
    @RequestMapping(value = "/{cmlCopmressionLkpId}", method = RequestMethod.GET, headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> DdpCompressionLkpController.showJson(@PathVariable("cmlCopmressionLkpId") Integer cmlCopmressionLkpId) {
        DdpCompressionLkp ddpCompressionLkp = ddpCompressionLkpService.findDdpCompressionLkp(cmlCopmressionLkpId);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        if (ddpCompressionLkp == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(ddpCompressionLkp.toJson(), headers, HttpStatus.OK);
    }
    
    @RequestMapping(headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> DdpCompressionLkpController.listJson() {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        List<DdpCompressionLkp> result = ddpCompressionLkpService.findAllDdpCompressionLkps();
        return new ResponseEntity<String>(DdpCompressionLkp.toJsonArray(result), headers, HttpStatus.OK);
    }
    
    @RequestMapping(method = RequestMethod.POST, headers = "Accept=application/json")
    public ResponseEntity<String> DdpCompressionLkpController.createFromJson(@RequestBody String json) {
        DdpCompressionLkp ddpCompressionLkp = DdpCompressionLkp.fromJsonToDdpCompressionLkp(json);
        ddpCompressionLkpService.saveDdpCompressionLkp(ddpCompressionLkp);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(value = "/jsonArray", method = RequestMethod.POST, headers = "Accept=application/json")
    public ResponseEntity<String> DdpCompressionLkpController.createFromJsonArray(@RequestBody String json) {
        for (DdpCompressionLkp ddpCompressionLkp: DdpCompressionLkp.fromJsonArrayToDdpCompressionLkps(json)) {
            ddpCompressionLkpService.saveDdpCompressionLkp(ddpCompressionLkp);
        }
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(value = "/{cmlCopmressionLkpId}", method = RequestMethod.PUT, headers = "Accept=application/json")
    public ResponseEntity<String> DdpCompressionLkpController.updateFromJson(@RequestBody String json, @PathVariable("cmlCopmressionLkpId") Integer cmlCopmressionLkpId) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        DdpCompressionLkp ddpCompressionLkp = DdpCompressionLkp.fromJsonToDdpCompressionLkp(json);
        if (ddpCompressionLkpService.updateDdpCompressionLkp(ddpCompressionLkp) == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(headers, HttpStatus.OK);
    }
    
    @RequestMapping(value = "/{cmlCopmressionLkpId}", method = RequestMethod.DELETE, headers = "Accept=application/json")
    public ResponseEntity<String> DdpCompressionLkpController.deleteFromJson(@PathVariable("cmlCopmressionLkpId") Integer cmlCopmressionLkpId) {
        DdpCompressionLkp ddpCompressionLkp = ddpCompressionLkpService.findDdpCompressionLkp(cmlCopmressionLkpId);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        if (ddpCompressionLkp == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        ddpCompressionLkpService.deleteDdpCompressionLkp(ddpCompressionLkp);
        return new ResponseEntity<String>(headers, HttpStatus.OK);
    }
    
}
